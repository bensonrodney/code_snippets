{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Typescript React Function Component": {
		"prefix": "compf",
		"body": [
			"import React from 'react'",
			"",
			"interface I${TM_FILENAME_BASE}Props {",
			"$1",
			"}",
			"",
			"export const $TM_FILENAME_BASE: React.FC<I${TM_FILENAME_BASE}Props> = ({$2}) => {",
			"\t\treturn ($3);",
			"}"
		],
		"description": "Typescript React Function Component"
	  },
	  "React Class Component": {
			"prefix": "compc",
			"body": [
			"import React from 'react';",
			"",
			"export interface I${1:ComponentName}Props {",
			"}",
			"",
			"export interface I${1:ComponentName}State {",
			"}",
			"",
			"class ${1:ComponentName} extends React.Component<I${1:ComponentName}Props,I${1:ComponentName}State> {",
			"\t//private ${3:private_member}: <type>",
			"\t//private ${4:private_member}: <type>",
			"\tconstructor(props: I${1:ComponentName}Props) {",
			"\t\tsuper(props);",
			"\t\t//this.${3:private_member} = <somevalue>;",
			"\t\t//this.${4:private_member} = <somevalue>;",
			"\t\t// This is the ONLY place you should (and must) set this.state directly.",
			"\t\t// Elsewhere, use this.setState(state => ({...state, name: someval,}));",
			"\t\tthis.state = {",
			"\t\t};",
			"\t}",
			"",
			"\tprivate componentDidMount(): void {",
			"\t\tconsole.log('${1:ComponentName}.componentDidMount() called.');",
			"\t}",
			"\tprivate componentWillUnmount(): void {",
			"\t\tconsole.log('${1:ComponentName}.componentWillUnmount() called.');",
			"\t}",
			"",
			"\tpublic render(): React.ReactElement {",
			"\t\treturn(",
			"\t\t\t<${2:React.Fragment}>",
			"\t\t\t\t",
			"\t\t\t</${2:React.Fragment}>",
			"\t\t)",
			"\t}",
			"}",
			"",
			"export default ${1:ComponentName};"
		],
		"description": "React Class Component"
	},
	"Typescript React Axios Data Module": {
		"prefix": "datamodule",
		"body": [
			"import { AxiosInstance } from 'axios';",
			"",
			"export interface I${1:Type} {",
			"\tid: string;",
			"\tprop1: type1;",
			"}",
			"",
			"// There are also put, post, delete axios client methods to use",
			"export async function get${1:Type}(client: AxiosInstance, typeId: string): Promise<I${1:Type}> {",
			"\treturn client.get('/path/to/api/endpoint/' + typeId).then((r) => r.data);",
			"}"
		],
		"description": "Typescript React Axios Data Module"
	}
}